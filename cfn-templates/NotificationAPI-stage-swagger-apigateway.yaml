---
swagger: "2.0"
info:
  version: "2018-11-27T01:22:19Z"
  title: "NotificationAPI"
basePath: "/stage"
schemes:
- "https"
paths:
  /execute:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::<Account-ID>:role/NotificationsWorkflow-APIGatewayExecutionRole-KSLGO60VHMFU"
        uri: "arn:aws:apigateway:us-east-1:states:action/StartExecution"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{ \n    \"input\": \"$util.escapeJavaScript($input.json('$'))\"\
            ,\n    \"stateMachineArn\": \"arn:aws:states:us-east-1:<Account-ID>:stateMachine:NotificationWorkflow\"\
            \n}"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /fail:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "taskToken"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::<Account-ID>:role/NotificationsWorkflow-APIGatewayExecutionRole-KSLGO60VHMFU"
        uri: "arn:aws:apigateway:us-east-1:states:action/SendTaskFailure"
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\n   \"cause\": \"Reject link was clicked.\",\n   \"\
            error\": \"Rejected\",\n   \"taskToken\": \"$input.params('taskToken')\"\
            \n}"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /succeed:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "taskToken"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::<Account-ID>:role/NotificationsWorkflow-APIGatewayExecutionRole-KSLGO60VHMFU"
        uri: "arn:aws:apigateway:us-east-1:states:action/SendTaskSuccess"
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\r\"output\": \"\\\"Approve link was clicked.\\\"\"\
            ,\r\"taskToken\": \"$input.params('taskToken')\"\r}"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws"
definitions:
  Empty:
    type: "object"
    title: "Empty Schema"
